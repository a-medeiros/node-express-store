name: CI

on:
  pull_request:
  push:
    branches: [ "main" ]

jobs:
  check:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        ports: ['5432:5432']
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: express_store_test
        # wait until Postgres is healthy before steps run
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    env:
      # ðŸ‘‡ Prisma will use this database during CI
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/express_store_test
      NODE_ENV: test

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - run: npm ci

      - name: Prisma generate
        run: npx prisma generate

      # If you keep migrations in prisma/migrations, use migrate deploy:
      - name: Apply migrations
        run: npx prisma migrate deploy

      # If you *donâ€™t* keep migrations, use db push instead (comment the block above and uncomment this):
      # - name: Sync schema (no migrations)
      #   run: npx prisma db push

      # Optional seed (only if you have it)
      - run: npm run seed --if-present

      - name: Lint
        run: npm run lint -- --max-warnings=0

      - name: Tests
        run: npm test -- --ci --runInBand
